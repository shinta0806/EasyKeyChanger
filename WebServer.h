// ----------------------------------------------------------------------------
#pragma once
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// Windows
#include <WinSock2.h>
// ----------------------------------------------------------------------------
// C++
#include <string>
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
using namespace std;
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
class CEasyKeyChanger;
// ----------------------------------------------------------------------------

// ============================================================================
// クラス宣言
// ============================================================================

class CWebServer
{
public:
	// ============================================================================
	// public 関数
	// ============================================================================

	// ----------------------------------------------------------------------------
	// コンストラクター・デストラクター
	// ----------------------------------------------------------------------------
	CWebServer(CEasyKeyChanger* oOwner);
	~CWebServer();

	// ----------------------------------------------------------------------------
	// スレッド制御関数
	// ----------------------------------------------------------------------------
	void Run();

private:
	// ============================================================================
	// private 定数
	// ============================================================================

	// デフォルトのポート番号
	const int DEFAULT_PORT_INDEX = 13580;

	// 待機時間 [ms]
	const int SLEEP_TIME = 20;

	// ソケットタイムアウト時間 [us]
	//const int SOCKET_TIME_OUT = 100 * 1000;

	// クライアントからのデータ受信時のバッファサイズ
	static const int RECEIVE_BUF_LEN = 2048;

	// 受信パラメーター名：cross
	const string PARAM_NAME_CROSS = "cross";

	// 受信パラメーター名：cut
	const string PARAM_NAME_CUT = "cut";

	// 受信パラメーター名：help
	const string PARAM_NAME_HELP = "help";

	// 受信パラメーター名：key
	const string PARAM_NAME_KEY = "key";

	// 受信パラメーター名：token
	const string PARAM_NAME_TOKEN = "token";

	// 受信パラメーター値：help=ver
	const string PARAM_VALUE_HELP_VER = "ver";

	// 受信パラメーター値：key=down
	const string PARAM_VALUE_KEY_DOWN = "down";

	// 受信パラメーター値：key=up
	const string PARAM_VALUE_KEY_UP = "up";

	// 返信メッセージテンプレート
	const string RESPONSE_TEMPLATE_1 = "HTTP/1.0 200 OK\r\n"
		"Content-Length: ";
	const string RESPONSE_TEMPLATE_2 = "\r\n"
		"Content-Type: text/html\r\n"
		"\r\n";

	// ============================================================================
	// private 変数
	// ============================================================================

	// オーナー
	CEasyKeyChanger* mOwner;

	// スレッド
	HANDLE mThreadHandle;

	// スレッド ID
	DWORD mThreadId;

	// スレッド終了リクエスト
	volatile bool mExitRequested;

	// サーバーソケット
	SOCKET mServerSocket;

	// 前回キーチェンジ時のトークン
	string mPrevToken;

#ifdef DEBUGWRITE
	CWebServer* mInitialThis;
#endif

	// ============================================================================
	// private 関数
	// ============================================================================

	// クライアントからの受信内容からパラメーター値を取り出す
	string GetParamValue(const string& oContent, const string& oParamName);

	// サーバーソケット初期化
	bool InitServerSocket();

	// クライアントからの接続に応答
	void Response();

	// ----------------------------------------------------------------------------
	// static 関数
	// ----------------------------------------------------------------------------
	static DWORD WINAPI ThreadFunc(void* oParam);
};

// ============================================================================
